{
  "info": {
    "name": "Go Backend API",
    "description": "Multi-tenant Go backend API with authentication and notes management",
    "version": "1.0.0",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "auth": {
    "type": "noauth"
  },
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Set base URL if not already set",
          "if (!pm.environment.get('baseUrl')) {",
          "    pm.environment.set('baseUrl', 'http://localhost:8080');",
          "}",
          "",
          "// Set default tenant domain if not already set",
          "if (!pm.environment.get('tenantDomain')) {",
          "    pm.environment.set('tenantDomain', 'myapp.local');",
          "}"
        ]
      }
    }
  ],
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:8080"
    },
    {
      "key": "tenantDomain",
      "value": "myapp.local"
    }
  ],
  "item": [
    {
      "name": "Health Checks",
      "item": [
        {
          "name": "Health Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/health",
              "host": ["{{baseUrl}}"],
              "path": ["health"]
            }
          }
        },
        {
          "name": "Readiness Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/ready",
              "host": ["{{baseUrl}}"],
              "path": ["ready"]
            }
          }
        },
        {
          "name": "Liveness Check",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/live",
              "host": ["{{baseUrl}}"],
              "path": ["live"]
            }
          }
        }
      ]
    },
    {
      "name": "Tenant Management",
      "item": [
        {
          "name": "Create Tenant",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('tenantId', response.id);",
                  "    pm.environment.set('tenantDomain', response.domain);",
                  "    console.log('Tenant created with ID:', response.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Tenant\",\n  \"domain\": \"test.local\",\n  \"admin_email\": \"admin@test.local\",\n  \"is_active\": true,\n  \"settings\": {\n    \"otp_enabled\": false,\n    \"session_timeout_minutes\": 1440,\n    \"rate_limit_per_minute\": 60\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/admin/tenants",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "tenants"]
            }
          }
        },
        {
          "name": "Get All Tenants",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/tenants",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "tenants"]
            }
          }
        },
        {
          "name": "Get Tenant by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/tenants/{{tenantId}}",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "tenants", "{{tenantId}}"]
            }
          }
        },
        {
          "name": "Update Tenant",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Updated Tenant Name\",\n  \"settings\": {\n    \"otp_enabled\": true,\n    \"session_timeout_minutes\": 720\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/admin/tenants/{{tenantId}}",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "tenants", "{{tenantId}}"]
            }
          }
        },
        {
          "name": "Delete Tenant",
          "request": {
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/admin/tenants/{{tenantId}}",
              "host": ["{{baseUrl}}"],
              "path": ["admin", "tenants", "{{tenantId}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Authentication (Password Mode)",
      "item": [
        {
          "name": "Register User",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.session_token) {",
                  "        pm.environment.set('sessionToken', response.session_token);",
                  "    }",
                  "    if (response.csrf_token) {",
                  "        pm.environment.set('csrfToken', response.csrf_token);",
                  "    }",
                  "    if (response.user) {",
                  "        pm.environment.set('userId', response.user.id);",
                  "        pm.environment.set('userEmail', response.user.email);",
                  "    }",
                  "    console.log('User registered successfully');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Origin",
                "value": "{{tenantDomain}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@test.local\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/register",
              "host": ["{{baseUrl}}"],
              "path": ["register"]
            }
          }
        },
        {
          "name": "Login User",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.session_token) {",
                  "        pm.environment.set('sessionToken', response.session_token);",
                  "    }",
                  "    if (response.csrf_token) {",
                  "        pm.environment.set('csrfToken', response.csrf_token);",
                  "    }",
                  "    console.log('User logged in successfully');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Origin",
                "value": "{{tenantDomain}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user@test.local\",\n  \"password\": \"password123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/login",
              "host": ["{{baseUrl}}"],
              "path": ["login"]
            }
          }
        },
        {
          "name": "Logout User",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Origin",
                "value": "{{tenantDomain}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"all_devices\": false\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/logout",
              "host": ["{{baseUrl}}"],
              "path": ["logout"]
            }
          }
        }
      ]
    },
    {
      "name": "Authentication (OTP Mode)",
      "item": [
        {
          "name": "Register User (OTP)",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.requires_otp) {",
                  "        console.log('OTP required for registration');",
                  "        console.log('Check email for OTP code');",
                  "    }",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Origin",
                "value": "{{tenantDomain}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"otpuser@test.local\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/register",
              "host": ["{{baseUrl}}"],
              "path": ["register"]
            }
          }
        },
        {
          "name": "Verify OTP",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 200) {",
                  "    const response = pm.response.json();",
                  "    if (response.session_token) {",
                  "        pm.environment.set('sessionToken', response.session_token);",
                  "    }",
                  "    if (response.csrf_token) {",
                  "        pm.environment.set('csrfToken', response.csrf_token);",
                  "    }",
                  "    console.log('OTP verified successfully');",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Origin",
                "value": "{{tenantDomain}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"otpuser@test.local\",\n  \"otp\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/verify-otp",
              "host": ["{{baseUrl}}"],
              "path": ["verify-otp"]
            }
          }
        },
        {
          "name": "Login User (OTP)",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Origin",
                "value": "{{tenantDomain}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"otpuser@test.local\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/login",
              "host": ["{{baseUrl}}"],
              "path": ["login"]
            }
          }
        }
      ]
    },
    {
      "name": "Protected Endpoints",
      "item": [
        {
          "name": "Dashboard",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Origin",
                "value": "{{tenantDomain}}"
              },
              {
                "key": "X-CSRF-Token",
                "value": "{{csrfToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/dashboard",
              "host": ["{{baseUrl}}"],
              "path": ["dashboard"]
            }
          }
        }
      ]
    },
    {
      "name": "Notes Management",
      "item": [
        {
          "name": "Get All Notes",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Origin",
                "value": "{{tenantDomain}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notes",
              "host": ["{{baseUrl}}"],
              "path": ["api", "notes"]
            }
          }
        },
        {
          "name": "Create Note",
          "event": [
            {
              "listen": "test",
              "script": {
                "type": "text/javascript",
                "exec": [
                  "if (pm.response.code === 201) {",
                  "    const response = pm.response.json();",
                  "    pm.environment.set('noteId', response.id);",
                  "    console.log('Note created with ID:', response.id);",
                  "}"
                ]
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Origin",
                "value": "{{tenantDomain}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"author\": \"John Doe\",\n  \"text\": \"This is a sample note created via Postman\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/notes",
              "host": ["{{baseUrl}}"],
              "path": ["api", "notes"]
            }
          }
        },
        {
          "name": "Get Note by ID",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Origin",
                "value": "{{tenantDomain}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notes/{{noteId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "notes", "{{noteId}}"]
            }
          }
        },
        {
          "name": "Update Note",
          "request": {
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Origin",
                "value": "{{tenantDomain}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"author\": \"John Doe\",\n  \"text\": \"This note has been updated via Postman\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/notes/{{noteId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "notes", "{{noteId}}"]
            }
          }
        },
        {
          "name": "Delete Note",
          "request": {
            "method": "DELETE",
            "header": [
              {
                "key": "Origin",
                "value": "{{tenantDomain}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/notes/{{noteId}}",
              "host": ["{{baseUrl}}"],
              "path": ["api", "notes", "{{noteId}}"]
            }
          }
        }
      ]
    }
  ]
}
