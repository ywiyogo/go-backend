services:
  db:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - gobackend-pgdata:/var/lib/postgresql/data
    # Removed port binding - database only accessible internally
    # ports:
    #   - "${DB_PORT}:${DB_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready"]
      interval: 60s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate
    restart: "no"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ../../internal/db/migrations:/migrations
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgres://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT}/${DB_NAME}?sslmode=disable",
        "up",
      ]

  migrate-down:
    image: migrate/migrate
    restart: "no"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ../../internal/db/migrations:/migrations
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgres://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT}/${DB_NAME}?sslmode=disable",
        "down",
        "1",
      ]
    profiles:
      - emergency

  backend:
    build:
      context: ../..
      dockerfile: deployment/production/Dockerfile
    restart: unless-stopped
    env_file:
      - .env
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    ports:
      - "${BACKEND_PORT:-8090}:8080"

  # caddy:
  #   image: caddy:2-alpine
  #   restart: unless-stopped
  #   ports:
  #     - "80:80"
  #     - "443:443"
  #     - "2019:2019" # Admin endpoint
  #   volumes:
  #     - ./Caddyfile:/etc/caddy/Caddyfile
  #     - gobackend-caddy-data:/data
  #     - gobackend-caddy-config:/config
  #   depends_on:
  #     - backend

volumes:
  gobackend-pgdata:
  # gobackend-caddy-data:
  # gobackend-caddy-config:
