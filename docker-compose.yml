name: gb

services:
  db:
    image: postgres:17
    restart: always
    environment:
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  migrate:
    image: migrate/migrate
    restart: "no"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./internal/db/migrations:/migrations
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgres://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT}/${DB_NAME}?sslmode=disable",
        "up",
      ]

  migrate-down:
    image: migrate/migrate
    restart: "no"
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    volumes:
      - ./internal/db/migrations:/migrations
    command:
      [
        "-path",
        "/migrations",
        "-database",
        "postgres://${DB_USER}:${DB_PASSWORD}@db:${DB_PORT}/${DB_NAME}?sslmode=disable",
        "down",
        "1",
      ]
    profiles:
      - tools

  app:
    build: . # assumes Dockerfile is in ./app directory
    restart: always
    depends_on:
      db:
        condition: service_healthy
      migrate:
        condition: service_completed_successfully
    env_file:
      - .env
    volumes:
      - .:/app
    ports:
      - "8080:8080"

volumes:
  pgdata:
