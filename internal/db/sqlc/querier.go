// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.29.0

package sqlc

import (
	"context"

	"github.com/google/uuid"
	"github.com/jackc/pgx/v5/pgtype"
)

type Querier interface {
	ClearUserOTP(ctx context.Context, id uuid.UUID) error
	ClearUserOTPInTenant(ctx context.Context, arg ClearUserOTPInTenantParams) error
	ClearVerificationToken(ctx context.Context, arg ClearVerificationTokenParams) error
	CountSessionsByTenant(ctx context.Context, tenantID pgtype.UUID) (int64, error)
	CountUsersByTenant(ctx context.Context, tenantID pgtype.UUID) (int64, error)
	CreateSession(ctx context.Context, arg CreateSessionParams) (Session, error)
	// Tenant-aware session queries
	CreateSessionInTenant(ctx context.Context, arg CreateSessionInTenantParams) (Session, error)
	CreateTenant(ctx context.Context, arg CreateTenantParams) (Tenant, error)
	CreateUserWithOtp(ctx context.Context, arg CreateUserWithOtpParams) (User, error)
	CreateUserWithOtpInTenant(ctx context.Context, arg CreateUserWithOtpInTenantParams) (User, error)
	CreateUserWithPassword(ctx context.Context, arg CreateUserWithPasswordParams) (User, error)
	CreateUserWithPasswordInTenant(ctx context.Context, arg CreateUserWithPasswordInTenantParams) (User, error)
	DeleteSessionByID(ctx context.Context, id int64) (int64, error)
	DeleteSessionByIDAndTenant(ctx context.Context, arg DeleteSessionByIDAndTenantParams) (int64, error)
	DeleteSessionByUserID(ctx context.Context, userID uuid.UUID) (int64, error)
	DeleteSessionByUserIDAndTenant(ctx context.Context, arg DeleteSessionByUserIDAndTenantParams) (int64, error)
	DeleteSessionsByDevice(ctx context.Context, arg DeleteSessionsByDeviceParams) (int64, error)
	DeleteSessionsByDeviceAndTenant(ctx context.Context, arg DeleteSessionsByDeviceAndTenantParams) (int64, error)
	DeleteTenantByID(ctx context.Context, id uuid.UUID) error
	GetCsrfTokenBySessionToken(ctx context.Context, sessionToken string) (string, error)
	GetCsrfTokenBySessionTokenAndTenant(ctx context.Context, arg GetCsrfTokenBySessionTokenAndTenantParams) (string, error)
	GetSessionByTokenAndTenant(ctx context.Context, arg GetSessionByTokenAndTenantParams) (GetSessionByTokenAndTenantRow, error)
	GetSessionRowBySessionToken(ctx context.Context, sessionToken string) (Session, error)
	GetSessionsByUserID(ctx context.Context, userID uuid.UUID) ([]Session, error)
	GetSessionsByUserIDAndTenant(ctx context.Context, arg GetSessionsByUserIDAndTenantParams) ([]GetSessionsByUserIDAndTenantRow, error)
	GetTenantByAPIKey(ctx context.Context, apiKey string) (Tenant, error)
	// Multi-tenant queries
	GetTenantByDomain(ctx context.Context, domain string) (Tenant, error)
	GetTenantByID(ctx context.Context, id uuid.UUID) (Tenant, error)
	GetUserByEmail(ctx context.Context, email string) (User, error)
	// Tenant-aware user queries
	GetUserByEmailAndTenant(ctx context.Context, arg GetUserByEmailAndTenantParams) (GetUserByEmailAndTenantRow, error)
	GetUserByIDAndTenant(ctx context.Context, arg GetUserByIDAndTenantParams) (GetUserByIDAndTenantRow, error)
	GetUserByVerificationTokenAndTenant(ctx context.Context, arg GetUserByVerificationTokenAndTenantParams) (GetUserByVerificationTokenAndTenantRow, error)
	GetUserIDBySessionToken(ctx context.Context, sessionToken string) (uuid.UUID, error)
	GetUserOTP(ctx context.Context, id uuid.UUID) (GetUserOTPRow, error)
	GetUserOTPInTenant(ctx context.Context, arg GetUserOTPInTenantParams) (GetUserOTPInTenantRow, error)
	// Additional tenant management queries
	ListTenants(ctx context.Context) ([]Tenant, error)
	SetUserOTP(ctx context.Context, arg SetUserOTPParams) error
	SetUserOTPInTenant(ctx context.Context, arg SetUserOTPInTenantParams) error
	UpdateSessionToken(ctx context.Context, arg UpdateSessionTokenParams) error
	UpdateSessionTokenInTenant(ctx context.Context, arg UpdateSessionTokenInTenantParams) error
	UpdateTenant(ctx context.Context, arg UpdateTenantParams) (Tenant, error)
	UpdateTenantSettings(ctx context.Context, arg UpdateTenantSettingsParams) error
	UpdateTenantStatus(ctx context.Context, arg UpdateTenantStatusParams) error
	UpdateUserEmailVerified(ctx context.Context, arg UpdateUserEmailVerifiedParams) error
	UserExistsByEmail(ctx context.Context, email string) (bool, error)
	UserExistsByEmailAndTenant(ctx context.Context, arg UserExistsByEmailAndTenantParams) (bool, error)
}

var _ Querier = (*Queries)(nil)
